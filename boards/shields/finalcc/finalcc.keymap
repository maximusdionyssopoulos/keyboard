#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        // ------------------------------------------------------------------------------------------------------------
        //         |  1     |  2   |  3      |  4    |  5   |           |  6     |  7      |  8    |  9   |  0   |
        // |  UP   |  Q     |  W   |  E      |  R    |  T   |           |  Y     |  U      |  I    |  O   |  P   |   -   |
        // | RGUI  |  A     |  S   |  D      |  F    |  G   |           |  H     |  J      |  K    |  L   |  ;   |   '   |
        // | VOLDN |  Z     |  X   |  C      |  V    |  B   |           |  N     |  M      |  ,    |  .   |  /   | VOLUP |
        //         |  `     |  =   |                                    |  [     |  ]      |
        //                  | ESC  | LALT    |                          | RCTRL  | LT BSLH |
        //         | LSHIFT | LGUI | SPACE   |                          | BSPC   | ENTER   | TAB |
        // ------------------------------------------------------------------------------------------------------------

        default_layer {
            bindings = <
                         &kp N1     &kp N2    &kp N3     &kp N4 &kp N5        &kp N6    &kp N7        &kp N8     &kp N9  &kp N0
            &kp UP       &kp Q      &kp W     &kp E      &kp R  &kp T         &kp Y     &kp U         &kp I      &kp O   &kp P    &kp MINUS
            &kp RGUI     &kp A      &kp S     &kp D      &kp F  &kp G         &kp H     &kp J         &kp K      &kp L   &kp SEMI &kp SQT
            &kp C_VOL_DN &kp Z      &kp X     &kp C      &kp V  &kp B         &kp N     &kp M         &kp COMMA  &kp DOT &kp FSLH &kp C_VOL_UP
                                    &kp GRAVE &kp EQUAL                       &kp LBKT  &kp RBKT
                                    &kp LALT  &kp LSHIFT                      &kp RCTRL &lt 1 BSLH
                         &kp ESCAPE &kp LGUI  &kp SPACE                                 &kp BACKSPACE &kp RETURN &kp TAB
            >;
        };

        // ------------------------------------------------------------------------------------------------------------
        //           |  1    |  2    |  3      |  4    |  5   |           |  6     |  PREV  |  PP   |  NEXT |  0   |
        // |  BTLCLR |  BT1  |  BT2  |  BT3    |  BT4  |  BT5 |           |  Y     |  U     |  I    |  O    |  P   |   -   |
        // | RGUI    |  A    |  S    |  D      |  F    |  G   |           |  RIGHT |  DOWN  |  UP   |  LEFT |  ;   |   '   |
        // | BOOTL   |  Z    |  X    |  C      |  V    |  B   |           |  N     |  M     |  ,    |  .    |  /   | BOOTL |
        //           |  `    |  =    |                                    |  [     |  ]     |
        //                  | ESC  | LALT      |                          | RCTRL  |  BSLH  |
        //           | LSHIFT | LGUI | SPACE   |                          | BSPC   |  ENTER | TAB   |
        // ------------------------------------------------------------------------------------------------------------

        lower_layer {
            bindings = <
                       &kp C_BRI_UP &kp C_BRI_DN  &trans       &trans       &trans            &trans          &kp C_PREV     &kp C_PP     &kp C_NEXT     &trans
            &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &trans          &trans         &trans       &trans         &trans &trans
            &trans      &trans    &trans     &trans    &trans  &trans                         &kp RIGHT_ARROW &kp DOWN_ARROW &kp UP_ARROW &kp LEFT_ARROW &trans &trans
            &bootloader &trans    &trans     &trans    &trans  &trans                         &trans          &trans         &trans       &trans         &trans &bootloader
                                  &trans     &trans                                           &trans          &trans
                                  &trans     &trans                                           &trans          &trans
                                  &trans    &trans     &trans                                 &trans          &trans         &trans
            >;
        };
    };
};
